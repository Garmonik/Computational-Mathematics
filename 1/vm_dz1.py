# -*- coding: utf-8 -*-
"""VM_DZ1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j-bmHo4IPmM7_NPZKJU8Y8fF-OSy_mzW
"""

import numpy as np
import scipy.stats as sps 
import matplotlib.pyplot as plt

a = np.mat([(-1, -2, 3), (0, 0, 0), (7, 8, 9)])
b = np.mat([(1, 2, 3), (4, 5, 6), (7, 8, 9)])
t1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
t2 = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

print(a)
print(b)
print(t1)
print(t2)

"""# Numpy"""

#1
c = np.vstack((a, b))
print(c)

#2
m = np.column_stack((t1, t2))
print(m)

#3
no_zero = np.sum([np.diag(a)!=0])
track = np.trace(a)
print(no_zero)
print(track)

#4
x = np.frombuffer(a, dtype=int)
unique, index = np.unique(x, return_index=True)
res = x[index]
print(res)

#5
a1 = np.frombuffer(a, dtype=int)
a2 = np.frombuffer(b, dtype=int)
a2 = np.array(list(map(lambda x, y: y if x>=0 else 0, a1, a2)))
a3 = a2.reshape(a.shape[0], a.shape[1])
print(a3)

#6
m = np.mean(a, axis=1)
none = np.array([0]*a.shape[1])
print(a)
a4 = a - m
m1 = np.sum(np.square(a), axis=1)
a4 = a4 / m1
inds = np.where(np.isnan(a4))
a4[inds] = np.take(none, inds[1])

print(a4)

#7
print(np.dot(a, b))

import time as mytime
N = np.arange(0, 1001)
time = np.zeros(1001)
for i in range(1, 1001):
  a = np.empty((i, i))
  b = np.empty((i, i))
  start = mytime.time()
  np.dot(a, b)
  end = mytime.time()
  time[i] = end-start

plt.figure(figsize=[12, 5], dpi=100)
plt.plot(N, time, linestyle = '--', color = 'crimson')
plt.stem(N, time, use_line_collection=True)
plt.xlabel("$N$")
plt.ylabel("$time(N), мс$")
plt.xticks(ticks=np.arange(time.size))
plt.title("График time(N) для Nympy")
plt.grid()
plt.show()

def matmult(a, b):
    zip_b = zip(*b)
    # zip_b = list(zip_b)
    return [[sum(ele_a*ele_b for ele_a, ele_b in zip(row_a, col_b)) 
             for col_b in zip_b] for row_a in a]

N = np.arange(0, 1001)
time = np.zeros(1001)
for i in range(1, 1001):
  a = np.empty((i, i))
  b = np.empty((i, i))
  start = mytime.time()
  matmult(a, b)
  end = mytime.time()
  time[i] = end-start

plt.figure(figsize=[12, 5], dpi=100)
plt.plot(N, time, linestyle = '--', color = 'crimson')
plt.stem(N, time, use_line_collection=True)
plt.xlabel("$N$")
plt.ylabel("$time(N), мс$")
plt.xticks(ticks=np.arange(time.size))
plt.title("График time(N) для for")
plt.grid()
plt.show()

"""# Matplotlib"""

#1
plt.subplot(2, 3, 1)
plt.plot(np.random.random(50))
plt.grid
plt.subplot(2, 3, 3)
plt.plot(np.random.random(50))
plt.grid
plt.subplot(2, 3, 4)
plt.plot(np.random.random(50))
plt.grid
plt.subplot(2, 3, 6)
plt.plot(np.random.random(50))
plt.grid

#2
x = np.linspace(0, 1, 15)
y = np.random.random_sample(15)
xerr = np.random.random_sample(15) / 10
yerr = np.random.random_sample(15) / 10

plt.figure()
plt.errorbar(x, y, xerr=xerr, yerr=yerr, fmt='o-', ecolor='red')
plt.show()

#3
import numpy as np
import matplotlib.pyplot as plt
 
fig = plt.figure(figsize=(20, 8))
ax = fig.add_subplot()
 
x = np.arange(-20*np.pi, 18*np.pi, 0.4)
ax.plot(x, np.sinc(np.pi * x) * np.exp( -np.abs(x/15)))
ax.grid()
plt.show()

fig = plt.figure(figsize=(20, 8))
ax = fig.add_subplot()
 
x = np.arange(-20*np.pi, 18*np.pi, 0.4)
ax.semilogy(x, np.sinc(x) * np.exp( -np.abs(x/10)))
ax.grid()
plt.show()
